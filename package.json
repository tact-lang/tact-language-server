{
    "name": "vscode-tact",
    "displayName": "Tact Language",
    "description": "Official support for Tact Language in VS Code",
    "keywords": [
        "TON",
        "The Open Network",
        "Tact",
        "Smart contract"
    ],
    "version": "0.8.1",
    "engines": {
        "vscode": "^1.63.0"
    },
    "icon": "client/src/assets/logo.png",
    "activationEvents": [
        "onLanguage:tact",
        "onLanguage:tasm",
        "onLanguage:tlb"
    ],
    "categories": [
        "Programming Languages"
    ],
    "repository": {
        "type": "git",
        "url": "git+https://github.com/tact-lang/tact-language-server.git"
    },
    "author": "TON Studio",
    "publisher": "tonstudio",
    "license": "MIT",
    "scripts": {
        "test": "yarn jest",
        "build": "webpack && node ./scripts/set-executable.js ./dist/server.js",
        "build:web": "webpack --env target=web",
        "package": "npx vsce package --no-yarn --readme-path README-extension.md",
        "package:web": "npx vsce package --no-yarn --readme-path README-extension.md --target web",
        "lint": "eslint --cache .",
        "fmt": "prettier --write -l --cache .",
        "fmt:check": "prettier --check --cache .",
        "grammar:wasm": "yarn grammar:tact:wasm && yarn grammar:fift:wasm && yarn grammar:tlb:wasm",
        "grammar:tact:wasm": "cd server/src/languages/tact/tree-sitter-tact && tree-sitter generate && tree-sitter build --wasm",
        "grammar:fift:wasm": "cd server/src/languages/fift/tree-sitter-fift && tree-sitter generate && tree-sitter build --wasm",
        "grammar:tlb:wasm": "cd server/src/languages/tlb/tree-sitter-tlb && tree-sitter generate && tree-sitter build --wasm",
        "watch": "webpack --watch",
        "watch:web": "webpack --watch --env target=web",
        "test:e2e": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts",
        "test:e2e:update": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --update-snapshots",
        "test:e2e:coverage": "yarn test:e2e:compile && c8 ts-node server/src/e2e/runTest.ts",
        "test:e2e:compile": "tsc -p ./server/src/e2e/tsconfig.json",
        "test:e2e:completion": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite completion",
        "test:e2e:types": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite types",
        "test:e2e:references": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite references",
        "test:e2e:rename": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite rename",
        "test:e2e:documentSymbols": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite documentSymbols",
        "test:e2e:folding": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite folding",
        "test:e2e:intentions": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --suite intentions",
        "test:e2e:verbose": "yarn test:e2e:compile && ts-node server/src/e2e/runTest.ts --verbose",
        "pack:ls": "cd dist && npm pack",
        "publish:ls": "cd dist && npm publish",
        "build-server-package-and-publish": "yarn build && yarn pack:ls && yarn publish:ls",
        "postinstall": "husky"
    },
    "main": "./dist/client",
    "browser": "./dist/web/client",
    "contributes": {
        "languages": [
            {
                "id": "tact",
                "aliases": [
                    "Tact"
                ],
                "extensions": [
                    ".tact"
                ],
                "icon": {
                    "light": "./dist/icons/icon-tact-dark.svg",
                    "dark": "./dist/icons/icon-tact-dark.svg"
                },
                "configuration": "./client/src/languages/language-configuration.json"
            },
            {
                "id": "tasm",
                "aliases": [
                    "TASM",
                    "Tact Assembly"
                ],
                "extensions": [
                    ".tasm"
                ],
                "icon": {
                    "light": "./dist/icons/icon-tasm-dark.svg",
                    "dark": "./dist/icons/icon-tasm-dark.svg"
                },
                "configuration": "./client/src/languages/tasm-language-configuration.json"
            },
            {
                "id": "tact-markdown-injection"
            },
            {
                "id": "fift",
                "aliases": [
                    "Fift"
                ],
                "extensions": [
                    ".fif"
                ],
                "icon": {
                    "light": "./dist/icons/ton-icon.svg",
                    "dark": "./dist/icons/ton-icon.svg"
                },
                "configuration": "./client/src/languages/fift-language-configuration.json"
            },
            {
                "id": "tlb",
                "aliases": [
                    "TL-B"
                ],
                "extensions": [
                    ".tlb"
                ],
                "icon": {
                    "light": "./dist/icons/icon-tlb-dark.svg",
                    "dark": "./dist/icons/icon-tlb-dark.svg"
                },
                "configuration": "./client/src/languages/tlb-language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "tact",
                "scopeName": "source.tact",
                "path": "./client/src/languages/syntaxes/tact.tmLanguage.json"
            },
            {
                "language": "tasm",
                "scopeName": "source.tasm",
                "path": "./client/src/languages/syntaxes/tasm.tmLanguage.json"
            },
            {
                "language": "fift",
                "scopeName": "source.fift",
                "path": "./client/src/languages/syntaxes/fift.tmLanguage.json"
            },
            {
                "language": "tact-markdown-injection",
                "scopeName": "markdown.tact.codeblock",
                "path": "./client/src/languages/syntaxes/tact-markdown-injection.json",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.tact": "tact"
                }
            },
            {
                "language": "tlb",
                "scopeName": "source.tlb",
                "path": "./client/src/languages/syntaxes/tlb.tmLanguage.json"
            }
        ],
        "snippets": [],
        "commands": [
            {
                "command": "tact.showParent",
                "title": "Show Parent Element",
                "category": "Tact"
            },
            {
                "command": "tact.build",
                "title": "Build Project",
                "category": "Tact",
                "icon": "$(gear)",
                "problemMatcher": [
                    "$tact"
                ]
            },
            {
                "command": "tact/getTypeAtPosition",
                "title": "Get Type At Position",
                "category": "Tact"
            },
            {
                "command": "tact/executeHoverProvider",
                "title": "Get Documentation At Position",
                "category": "Tact"
            },
            {
                "command": "tact/executeGetScopeProvider",
                "title": "Get Scope Information"
            },
            {
                "command": "tact.runMisti",
                "title": "Run Misti Analysis",
                "category": "Tact",
                "icon": "$(search)",
                "problemMatcher": [
                    "$tact"
                ]
            },
            {
                "command": "tact.searchByType",
                "title": "Search by Type Signature",
                "category": "Tact",
                "icon": "$(symbol-method)"
            },
            {
                "command": "tact.showToolchainInfo",
                "title": "Show Toolchain Information",
                "category": "Tact",
                "icon": "$(info)"
            },
            {
                "command": "tact.selectToolchain",
                "title": "Select Active Toolchain",
                "category": "Tact",
                "icon": "$(tools)"
            },
            {
                "command": "tact.manageToolchains",
                "title": "Manage Toolchains",
                "category": "Tact",
                "icon": "$(settings-gear)"
            },
            {
                "command": "tact.addToolchain",
                "title": "Add New Toolchain",
                "category": "Tact",
                "icon": "$(add)"
            },
            {
                "command": "tact.removeToolchain",
                "title": "Remove Toolchain",
                "category": "Tact",
                "icon": "$(trash)"
            }
        ],
        "keybindings": [
            {
                "command": "tact.build",
                "key": "f5",
                "when": "editorTextFocus && editorLangId == 'tact'"
            },
            {
                "command": "tact.searchByType",
                "key": "alt+f",
                "when": "editorTextFocus && editorLangId == 'tact'"
            }
        ],
        "menus": {
            "explorer/context": []
        },
        "configuration": [
            {
                "title": "General",
                "properties": {
                    "tact.stdlib.path": {
                        "type": "string",
                        "default": null,
                        "description": "Path to Tact standard library. If empty, will try to find in node_modules"
                    }
                }
            },
            {
                "title": "Toolchain",
                "properties": {
                    "tact.toolchain.activeToolchain": {
                        "type": "string",
                        "default": "auto",
                        "description": "Name of the active toolchain to use. Use 'auto' for automatic detection."
                    },
                    "tact.toolchain.toolchains": {
                        "type": "object",
                        "default": {
                            "auto": {
                                "name": "Auto-detected",
                                "path": "",
                                "description": "Automatically detect Tact compiler in node_modules"
                            }
                        },
                        "additionalProperties": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Display name for this toolchain"
                                },
                                "path": {
                                    "type": "string",
                                    "description": "Path to the Tact compiler executable"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Optional description for this toolchain"
                                }
                            },
                            "required": [
                                "name",
                                "path"
                            ]
                        },
                        "description": "Configured Tact toolchains. Each key is a unique identifier for the toolchain."
                    },
                    "tact.toolchain.showShortCommitInStatusBar": {
                        "type": "boolean",
                        "default": false,
                        "description": "Add short commit hash after Tact version in status bar"
                    }
                }
            },
            {
                "title": "Editor › Hints",
                "properties": {
                    "tact.hints.disable": {
                        "type": "boolean",
                        "default": false,
                        "description": "Disable all inlay hints"
                    },
                    "tact.hints.types": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show type hints for variables and expressions"
                    },
                    "tact.hints.parameters": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show parameter name hints in function calls"
                    },
                    "tact.hints.showExitCodes": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show exit codes in require() call"
                    },
                    "tact.hints.exitCodeFormat": {
                        "type": "string",
                        "enum": [
                            "decimal",
                            "hex"
                        ],
                        "default": "decimal",
                        "description": "Format of exit codes in require() calls",
                        "enumDescriptions": [
                            "Show exit codes in decimal format (e.g. 1234)",
                            "Show exit codes in hexadecimal format (e.g. 0x4D2)"
                        ]
                    },
                    "tact.hints.showMethodId": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show method ID hints for contract functions"
                    },
                    "tact.hints.showExplicitTLbIntType": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show explicit TL-B type hints (as int257) for Int fields"
                    },
                    "tact.hints.showToCellSize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show size in bits for `toCell()` calls"
                    },
                    "tact.hints.showAsciiEvaluationResult": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show the result of evaluation for `ascii()` builtin function"
                    },
                    "tact.hints.showCrc32EvaluationResult": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show the result of evaluation for `crc32()` builtin function"
                    },
                    "tact.hints.showMessageId": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show calculated message opcode"
                    },
                    "tact.hints.showReceiverOpcode": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show opcode for receiver"
                    }
                }
            },
            {
                "title": "Editor › Gas Calculation",
                "properties": {
                    "tact.gas.loopGasCoefficient": {
                        "type": "number",
                        "default": "5",
                        "description": "The default number of iterations of loops for gas calculation"
                    },
                    "tact.gas.showGasStatusBar": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show status bar with gas consumption for selected instructions"
                    }
                }
            },
            {
                "title": "Editor › Gas Hints",
                "properties": {
                    "tact.hints.showGasConsumption": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show gas consumption hints for asm functions"
                    },
                    "tact.hints.showAsmInstructionGas": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show gas consumption hints for assembly instructions"
                    },
                    "tact.hints.showContinuationGas": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show gas consumption hints for continuation blocks"
                    },
                    "tact.hints.gasFormat": {
                        "type": "string",
                        "default": ": {gas}",
                        "description": "Format string for gas consumption hints. Use {gas} as placeholder for the gas value and {stack} for the stack info",
                        "examples": [
                            "💨 {gas}",
                            "Gas: {gas}",
                            "⛽ {gas}",
                            "{gas} gas units"
                        ]
                    }
                }
            },
            {
                "title": "Editor › Code Lenses",
                "properties": {
                    "tact.codeLens.enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable/disable all code lens"
                    },
                    "tact.codeLens.showUsages": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show number of usages for traits, structs, messages, constants and functions"
                    },
                    "tact.codeLens.showOverrides": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show number of overrides for virtual functions"
                    },
                    "tact.codeLens.showTraitImplementations": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show number of implementations for traits"
                    },
                    "tact.codeLens.showFunctionImplementations": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show number of implementations for abstract functions"
                    },
                    "tact.codeLens.showParentTraitFields": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show 'Go to parent' lens for fields inherited from traits"
                    },
                    "tact.codeLens.showParentTraitFunctions": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show 'Go to parent' lens for functions inherited from traits"
                    },
                    "tact.codeLens.showMessageReceivedCount": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show 'Received X times' lens for messages"
                    },
                    "tact.codeLens.showMessageSentCount": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show 'Sent X times' lens for messages"
                    }
                }
            },
            {
                "title": "Editor › Completion",
                "properties": {
                    "tact.completion.typeAware": {
                        "type": "boolean",
                        "default": true,
                        "description": "Sort completion items by relevance to the current context type"
                    },
                    "tact.completion.addImports": {
                        "type": "boolean",
                        "default": true,
                        "description": "Automatically add necessary imports for symbols from other files"
                    }
                }
            },
            {
                "title": "Editor › Document",
                "properties": {
                    "tact.document.showStructFields": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show struct fields in document outline"
                    },
                    "tact.document.showMessageFields": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show message fields in document outline"
                    }
                }
            },
            {
                "title": "Editor › Inspections",
                "properties": {
                    "tact.inspections.disabled": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "tact-compiler-errors",
                                "unused-parameter",
                                "empty-block",
                                "unused-variable",
                                "struct-initialization",
                                "unused-contract-members",
                                "unused-import",
                                "missed-members-in-contract",
                                "not-imported-symbol",
                                "dont-use-text-receivers",
                                "rewrite",
                                "dont-use-deployable",
                                "rewrite-as-augmented-assignment",
                                "can-be-standalone-function",
                                "can-be-inline-function",
                                "use-explicit-string-receiver",
                                "implicit-return-value-discard",
                                "implicit-message-opcode",
                                "misspelled-keyword",
                                "deprecated-symbol-usage",
                                "optimal-math-functions",
                                "naming-convention"
                            ]
                        },
                        "default": [],
                        "description": "List of disabled code inspections. All inspections are enabled by default."
                    }
                }
            },
            {
                "title": "Editor › Documentation",
                "properties": {
                    "tact.documentation.showTlb": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show TL-B definition for structs, messages and contracts"
                    },
                    "tact.documentation.showKeywordDocumentation": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show documentation for keywords"
                    },
                    "tact.documentation.maximumLinesBodyToShowInDocumentation": {
                        "type": "number",
                        "default": 2,
                        "description": "If a function takes up less than or equal to the number of specified lines, it will be fully displayed in the documentation when hovered over. Set to 0 to always show only signature"
                    },
                    "tact.documentation.showNumbersInDifferentNumberSystems": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show hover documentation with the number in different number systems"
                    }
                }
            },
            {
                "title": "Find Usages",
                "properties": {
                    "tact.findUsages.scope": {
                        "type": "string",
                        "enum": [
                            "workspace",
                            "everywhere"
                        ],
                        "enumDescriptions": [
                            "Search only in workspace files (default)",
                            "Search everywhere including standard library"
                        ],
                        "default": "workspace",
                        "description": "Where to search when using Find Usages"
                    }
                }
            },
            {
                "title": "Fift",
                "properties": {
                    "tact.fift.hints.showGasConsumption": {
                        "type": "boolean",
                        "default": true,
                        "description": "Show gas consumption hints for Fift instructions"
                    },
                    "tact.fift.semanticHighlighting.enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable/disable semantic highlighting for Fift files"
                    }
                }
            },
            {
                "title": "Linters",
                "properties": {
                    "tact.linters.compiler.enable": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable Tact compiler analysis"
                    },
                    "tact.linters.useProblemMatcher": {
                        "type": "boolean",
                        "default": false,
                        "description": "Highlight errors in editor after build"
                    },
                    "tact.linters.misti.enable": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enable Misti static analyzer"
                    },
                    "tact.linters.misti.binPath": {
                        "type": "string",
                        "default": "npx misti",
                        "description": "Path to Misti binary/command to run Misti"
                    }
                }
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": [
                    "tact.config.json"
                ],
                "url": "https://raw.githubusercontent.com/tact-lang/tact/refs/heads/main/src/config/configSchema.json"
            }
        ],
        "customEditors": [],
        "taskDefinitions": [
            {
                "type": "blueprint-build",
                "properties": {}
            },
            {
                "type": "blueprint-test",
                "properties": {}
            },
            {
                "type": "tact-template-build",
                "properties": {}
            },
            {
                "type": "tact-template-test",
                "properties": {}
            }
        ],
        "problemMatchers": [
            {
                "name": "tact",
                "owner": "tact",
                "fileLocation": [
                    "relative",
                    "${workspaceFolder}"
                ],
                "pattern": [
                    {
                        "regexp": "^Error:\\s+(.+):(\\d+):(\\d+):\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "message": 4
                    }
                ],
                "severity": "error"
            }
        ]
    },
    "dependencies": {
        "@textlint/markdown-to-ast": "14.4.2",
        "buffer": "^6.0.3",
        "change-case": "^5.4.4",
        "crypto-browserify": "^3.12.1",
        "glob": "^11.0.1",
        "url": "^0.11.3",
        "vscode-languageclient": "^8.0.2",
        "vscode-languageserver": "^8.0.2",
        "vscode-languageserver-textdocument": "^1.0.7",
        "vscode-uri": "^3.0.7",
        "web-tree-sitter": "^0.25.0"
    },
    "devDependencies": {
        "@scaleton/func-debug-symbols": "^0.1.5",
        "@types/events": "^3",
        "@types/jest": "^29.5.14",
        "@types/mocha": "^10.0.6",
        "@types/node": "^22.2.0",
        "@types/path-browserify": "^1",
        "@types/vscode": "^1.63.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.0.0",
        "c8": "^10.1.3",
        "copy-webpack-plugin": "^12.0.2",
        "eslint": "^9.19.0",
        "eslint-plugin-functional": "^9.0.1",
        "eslint-plugin-unicorn": "^56.0.1",
        "eslint-plugin-unused-imports": "^4.1.4",
        "events": "^3.3.0",
        "husky": "^9.1.7",
        "jest": "^29.7.0",
        "mocha": "^10.3.0",
        "os-browserify": "^0.3.0",
        "path-browserify": "^1.0.1",
        "prettier": "3.4.2",
        "process": "^0.11.10",
        "stream-browserify": "^3.0.0",
        "string_decoder": "^1.3.0",
        "tree-sitter-cli": "^0.25.0",
        "ts-jest": "^29.2.6",
        "ts-loader": "^9.5.1",
        "ts-node": "^10.9.2",
        "tsconfig-paths-webpack-plugin": "^4.2.0",
        "typescript": "^5.7.0",
        "typescript-eslint": "^8.22.0",
        "util": "^0.12.5",
        "vm-browserify": "^1.1.2",
        "webpack": "^5.92.1",
        "webpack-cli": "^5.1.4"
    },
    "peerDependencies": {
        "tree-sitter": "^0.21.1"
    },
    "peerDependenciesMeta": {
        "tree-sitter": {
            "optional": true
        }
    },
    "dependenciesMeta": {
        "tree-sitter-cli": {
            "built": true
        }
    },
    "packageManager": "yarn@4.6.0",
    "prettier": {
        "arrowParens": "avoid",
        "bracketSpacing": false,
        "printWidth": 100,
        "semi": false,
        "singleQuote": false,
        "tabWidth": 4,
        "trailingComma": "all",
        "useTabs": false,
        "overrides": [
            {
                "files": [
                    "*.yaml",
                    "*.yml"
                ],
                "options": {
                    "tabWidth": 2
                }
            }
        ]
    }
}
