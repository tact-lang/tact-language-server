========================================================================
fromCell/fromSlice for Struct
========================================================================
primitive Int;

fun AnyStruct_fromCell(cell: Cell): S {}
fun AnyStruct_fromSlice(slice: Slice): S {}

struct Foo {}

fun test() {
    Foo.<caret>fromCell();
}
------------------------------------------------------------------------
8:8 -> 2:4 resolved

========================================================================
fromCell/fromSlice for message
========================================================================
primitive Int;

fun AnyMessage_fromCell(cell: Cell): M {}
fun AnyMessage_fromSlice(slice: Slice): M {}

message Foo {}

fun test() {
    Foo.<caret>fromSlice();
}
------------------------------------------------------------------------
8:8 -> 3:4 resolved

========================================================================
fromCell/fromSlice for contract
========================================================================
primitive Int;

fun AnyContract_fromCell(cell: Cell): M {}
fun AnyContract_fromSlice(slice: Slice): M {}

contract Foo {}

fun test() {
    Foo.<caret>fromSlice();
    Foo.<caret>fromCell();
}
------------------------------------------------------------------------
8:8 -> 3:4 resolved
9:8 -> 2:4 resolved
